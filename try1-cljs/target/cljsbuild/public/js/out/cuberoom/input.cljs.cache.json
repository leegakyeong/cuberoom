["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Phaser",["^ ","~$Input",["^ ","~$Keyboard",["^ ","~$KeyCodes",["^ ","~$UP",["^ "],"~$DOWN",["^ "],"~$LEFT",["^ "],"~$RIGHT",["^ "]]]]]],"~:use-macros",["^ ","~$is","~$cljs.test","~$deftest","^=","~$jsf","~$cuberoom.macros"],"~:excludes",["~#set",[]],"~:name","~$cuberoom.input","~:imports",null,"~:requires",["^ ","^=","^="],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$add-key",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/mnt/second/juhyung/code/projects/cuberoom/src/cljs/cuberoom/input.cljs","~:line",15,"~:column",8,"~:end-line",15,"~:end-column",15,"~:private",true,"~:arglists",["~#list",["~$quote",["^T",[["~$scene","~$key-name"]]]]]],"^R",true,"^C","~$cuberoom.input/add-key","^M","/mnt/second/juhyung/code/projects/cuberoom/src/cljs/cuberoom/input.cljs","^Q",15,"~:method-params",["^T",[["^V","^W"]]],"~:protocol-impl",null,"~:arglists-meta",["^T",[null,null]],"^O",1,"~:variadic?",false,"^N",15,"~:ret-tag","~$any","^P",15,"~:max-fixed-arity",2,"~:fn-var",true,"^S",["^T",["^U",["^T",[["^V","^W"]]]]]],"~$initialize",["^ ","^K",null,"^L",["^ ","^M","/mnt/second/juhyung/code/projects/cuberoom/src/cljs/cuberoom/input.cljs","^N",18,"^O",7,"^P",18,"^Q",17,"^S",["^T",["^U",["^T",[["^V"]]]]],"~:doc","Enroll events of phaser"],"^C","~$cuberoom.input/initialize","^M","/mnt/second/juhyung/code/projects/cuberoom/src/cljs/cuberoom/input.cljs","^Q",17,"^Y",["^T",[["^V"]]],"^Z",null,"^[",["^T",[null,null]],"^O",1,"^10",false,"^N",18,"^11","~$cljs.core/IMap","^P",18,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^16","Enroll events of phaser"],"~$pressed-keys-from-phaser",["^ ","^K",null,"^L",["^ ","^M","/mnt/second/juhyung/code/projects/cuberoom/src/cljs/cuberoom/input.cljs","^N",30,"^O",8,"^P",30,"^Q",32,"^R",true,"^S",["^T",["^U",["^T",[["~$phaser-input-objects"]]]]]],"^R",true,"^C","~$cuberoom.input/pressed-keys-from-phaser","^M","/mnt/second/juhyung/code/projects/cuberoom/src/cljs/cuberoom/input.cljs","^Q",32,"^Y",["^T",[["^1:"]]],"^Z",null,"^[",["^T",[null,null]],"^O",1,"^10",false,"^N",30,"^11",["^B",[null,"^12"]],"^P",30,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^1:"]]]]]],"~$test-pressed-keys-from-phaser",["^ ","^K",null,"^L",["^ ","^M","/mnt/second/juhyung/code/projects/cuberoom/src/cljs/cuberoom/input.cljs","^N",40,"^O",10,"^P",40,"^Q",39],"^C","~$cuberoom.input/test-pressed-keys-from-phaser","^M","/mnt/second/juhyung/code/projects/cuberoom/src/cljs/cuberoom/input.cljs","^Q",39,"^Y",["^T",[[]]],"^Z",null,"^[",["^T",[]],"^O",1,"^10",false,"^N",40,"^11",["^B",["^12","~$clj-nil"]],"^P",40,"^13",0,"^14",true,"^S",null,"~:test",true],"~$read-input",["^ ","^K",null,"^L",["^ ","^M","/mnt/second/juhyung/code/projects/cuberoom/src/cljs/cuberoom/input.cljs","^N",45,"^O",7,"^P",45,"^Q",17,"^S",["^T",["^U",["^T",[["^1:"]]]]],"^16","Receive phaser input objects.\n  Return input map in clojure style.\n  Please check the docstring of the namespace."],"^C","~$cuberoom.input/read-input","^M","/mnt/second/juhyung/code/projects/cuberoom/src/cljs/cuberoom/input.cljs","^Q",17,"^Y",["^T",[["^1:"]]],"^Z",null,"^[",["^T",[null,null]],"^O",1,"^10",false,"^N",45,"^11",["^B",["~$clj","^12"]],"^P",45,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^1:"]]]]],"^16","Receive phaser input objects.\n  Return input map in clojure style.\n  Please check the docstring of the namespace."],"~$test-read-input",["^ ","^K",null,"^L",["^ ","^M","/mnt/second/juhyung/code/projects/cuberoom/src/cljs/cuberoom/input.cljs","^N",53,"^O",10,"^P",53,"^Q",25],"^C","~$cuberoom.input/test-read-input","^M","/mnt/second/juhyung/code/projects/cuberoom/src/cljs/cuberoom/input.cljs","^Q",25,"^Y",["^T",[[]]],"^Z",null,"^[",["^T",[]],"^O",1,"^10",false,"^N",53,"^11",["^B",["^12","^1>"]],"^P",53,"^13",0,"^14",true,"^S",null,"^1?",true]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^@","^@","^=","^="],"~:cljs.analyzer/constants",["^ ","~:seen",["^B",["~:keyboard","~:down","~$=","^1=","~:ns","^C","~:w","^19","^M","^D","^Q","^1D","~:type","~:s","~:up","^O","~:fail","~:keys","^N","^1<","~$not","~:expected","^P","~:right","~:d","~:error","^1@","~:pass","^S","~:actual","^16","^1?","~:a","~:message","~:left","^1C"]],"~:order",["~:w","~:a","~:s","~:d","^1M","^1J","^1W","^1R","^M","^Q","^1L","^O","^N","^1Q","^P","^1U","^1V","^1S","~$=","^1T","^1N","^1P","^19","^1=","^1K","^C","^S","^16","^1?","^D","^1<","^1I","^1O","^1@","^1D","^1C"]],"^16","This file manages input.\n  # Initialization\n\n  * `initialize` function will creates phaser input objects.\n\n  * `read-input` function read input from phaser input objects and\n  returns. Here is an example output.\n  ```edn\n  {:keyboard {:keys #{:a :b}}}\n  ```"]