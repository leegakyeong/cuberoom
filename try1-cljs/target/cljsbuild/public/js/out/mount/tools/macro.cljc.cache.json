["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$deftime","~$mount.tools.macrovich"],"~:excludes",["~#set",["~$case"]],"~:name","~$mount.tools.macro","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$name-with-attributes",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/mnt/second/juhyung/code/projects/cuberoom/target/cljsbuild/public/js/out/mount/tools/macro.cljc","~:line",30,"~:column",7,"~:end-line",30,"~:end-column",27,"~:arglists",["~#list",["~$quote",["^H",[["~$name","~$macro-args"]]]]],"~:doc","To be used in macro definitions.\n   Handles optional docstrings and attribute maps for a name to be defined\n   in a list of macro arguments. If the first macro argument is a string,\n   it is added as a docstring to name and removed from the macro argument\n   list. If afterwards the first macro argument is a map, its entries are\n   added to the name's metadata map and the map is removed from the\n   macro argument list. The return value is a vector containing the name\n   with its extended metadata map and the list of unprocessed macro\n   arguments."],"^8","~$mount.tools.macro/name-with-attributes","^B","target/cljsbuild/public/js/out/mount/tools/macro.cljc","^F",27,"~:method-params",["^H",[["^J","^K"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^D",1,"~:variadic?",false,"^C",30,"~:ret-tag","~$cljs.core/IVector","^E",30,"~:max-fixed-arity",2,"~:fn-var",true,"^G",["^H",["^I",["^H",[["^J","^K"]]]]],"^L","To be used in macro definitions.\n   Handles optional docstrings and attribute maps for a name to be defined\n   in a list of macro arguments. If the first macro argument is a string,\n   it is added as a docstring to name and removed from the macro argument\n   list. If afterwards the first macro argument is a map, its entries are\n   added to the name's metadata map and the map is removed from the\n   macro argument list. The return value is a vector containing the name\n   with its extended metadata map and the list of unprocessed macro\n   arguments."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^4","^4"],"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["^L"]],"~:order",["^L"]],"^L",null]