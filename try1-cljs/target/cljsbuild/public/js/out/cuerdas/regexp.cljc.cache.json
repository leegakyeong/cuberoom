["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$XRegExp",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",["~$regexp?"]],"~:name","~$cuerdas.regexp","~:imports",null,"~:requires",["^ ","~$cuerdas.vendor.xregexp","^<","~$gstr","~$goog.string","^>","^>"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$xregexp",["^ ","~:meta",["^ ","~:file","/mnt/second/juhyung/code/projects/cuberoom/target/cljsbuild/public/js/out/cuerdas/regexp.cljc","~:line",33,"~:column",19,"~:end-line",33,"~:end-column",26,"~:private",true],"^I",true,"^8","~$cuerdas.regexp/xregexp","^D","target/cljsbuild/public/js/out/cuerdas/regexp.cljc","^H",26,"^F",4,"^E",33,"^G",33,"~:tag","~$js"],"^7",["^ ","~:protocol-inline",null,"^C",["^ ","^D","/mnt/second/juhyung/code/projects/cuberoom/target/cljsbuild/public/js/out/cuerdas/regexp.cljc","^E",35,"^F",7,"^G",35,"^H",14,"~:arglists",["~#list",["~$quote",["^O",[["~$x"]]]]],"~:doc","Return `true` if `x` is a regexp pattern\n  instance."],"^8","~$cuerdas.regexp/regexp?","^D","target/cljsbuild/public/js/out/cuerdas/regexp.cljc","^H",14,"~:method-params",["^O",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^O",[null,null]],"^F",1,"~:variadic?",false,"^E",35,"~:ret-tag","~$boolean","^G",35,"~:max-fixed-arity",1,"~:fn-var",true,"^N",["^O",["^P",["^O",[["~$x"]]]]],"^Q","Return `true` if `x` is a regexp pattern\n  instance."],"~$enhace",["^ ","^M",null,"^C",["^ ","^D","/mnt/second/juhyung/code/projects/cuberoom/target/cljsbuild/public/js/out/cuerdas/regexp.cljc","^E",42,"^F",7,"^G",42,"^H",13,"^N",["^O",["^P",["^O",[["~$re"]]]]],"^Q","Enhace the regexp instance with unicode support. This is noop\n  in JVM because it already works perfectly with unicode."],"^8","~$cuerdas.regexp/enhace","^D","target/cljsbuild/public/js/out/cuerdas/regexp.cljc","^H",13,"^S",["^O",[["^10"]]],"^T",null,"^U",["^O",[null,null]],"^F",1,"^V",false,"^E",42,"^W","~$any","^G",42,"^Y",1,"^Z",true,"^N",["^O",["^P",["^O",[["^10"]]]]],"^Q","Enhace the regexp instance with unicode support. This is noop\n  in JVM because it already works perfectly with unicode."],"~$escape",["^ ","^M",null,"^C",["^ ","^D","/mnt/second/juhyung/code/projects/cuberoom/target/cljsbuild/public/js/out/cuerdas/regexp.cljc","^E",50,"^F",7,"^G",50,"^H",13,"^N",["^O",["^P",["^O",[["~$s"]]]]],"^Q","Escapes characters in the string that are not safe\n   to use in a RegExp."],"^8","~$cuerdas.regexp/escape","^D","target/cljsbuild/public/js/out/cuerdas/regexp.cljc","^H",13,"^S",["^O",[["~$s"]]],"^T",null,"^U",["^O",[null,null]],"^F",1,"^V",false,"^E",50,"^W","~$string","^G",50,"^Y",1,"^Z",true,"^N",["^O",["^P",["^O",[["~$s"]]]]],"^Q","Escapes characters in the string that are not safe\n   to use in a RegExp."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^Q","A regexp helpers and enhancements (mostly for cljs)."]